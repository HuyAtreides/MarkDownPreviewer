{"version":3,"sources":["editor.js","previewer.js","index.js","placeHolder.js"],"names":["Editor","props","fullScreenStyles","fullScreen","style","display","iconClass","width","checkFullScreen","textareaHeight","minHeight","id","className","type","value","input","onChange","handleChange","Previewer","previewHeight","marked","setOptions","breaks","rawHTML","dangerouslySetInnerHTML","__html","MarkdownPreviewer","state","editorFullScreen","previewFullScreen","bind","handleClickPreview","handleClickEditor","event","this","setState","target","prevState","document","querySelector","addEventListener","React","Component","ReactDOM","render"],"mappings":"gOAuCeA,MAtCf,SAAgBC,GACf,IAAIC,EAwBL,SAAyBC,GACxB,IAAKA,EAAW,IAAMA,EAAW,GAChC,MAAO,CAAEC,MAAO,CAAEC,QAAS,QAAUC,UAAW,IAC5C,GAAIH,EAAW,KAAOA,EAAW,GACrC,MAAO,CACNC,MAAO,CAAEG,MAAO,OAChBD,UAAW,kBAEb,MAAO,CACNF,MAAO,GACPE,UAAW,gBAlCWE,CAAgBP,EAAME,YACzCM,EACHR,EAAME,WAAW,KAAOF,EAAME,WAAW,GACtC,CAAEO,UAAW,SACb,GACJ,OACC,yBAAKC,GAAG,cAAcP,MAAOF,EAAiBE,OAC7C,yBAAKO,GAAG,kBACP,uBAAGC,UAAU,6BAA6BD,GAAG,SAD9C,UAEC,uBACCC,UAAWV,EAAiBI,UAC5BK,GAAG,mBAGL,8BACCE,KAAK,OACLF,GAAG,SACHG,MAAOb,EAAMc,MACbC,SAAUf,EAAMgB,aAChBb,MAAOK,M,gBCsBIS,MAzCf,SAAmBjB,GAClB,IAAIC,EA2BL,SAAyBC,GACxB,GAAIA,EAAW,KAAOA,EAAW,GAChC,MAAO,CAAEC,MAAO,CAAEC,QAAS,QAAUC,UAAW,IAC5C,IAAKH,EAAW,IAAMA,EAAW,GACrC,MAAO,CACNC,MAAO,CAAEG,MAAO,OAChBD,UAAW,kBAEb,MAAO,CACNF,MAAO,GACPE,UAAW,gBArCWE,CAAgBP,EAAME,YACzCgB,GACFlB,EAAME,WAAW,IAAMF,EAAME,WAAW,GACtC,CAAEO,UAAW,SACb,GACJU,IAAOC,WAAW,CACjBC,QAAQ,IAET,IAAIC,EAAUH,IAAOnB,EAAMc,OAC3B,OACC,yBAAKJ,GAAG,iBAAiBP,MAAOF,EAAiBE,OAChD,yBAAKO,GAAG,qBACP,uBAAGC,UAAU,6BAA6BD,GAAG,SAAY,IAD1D,YAGC,uBACCC,UAAWV,EAAiBI,UAC5BK,GAAG,sBAGL,yBACCA,GAAG,UACHa,wBAAyB,CAAEC,OAAQF,GACnCnB,MAAOe,MCnBLO,E,kDACL,WAAYzB,GAAQ,IAAD,8BAClB,cAAMA,IACD0B,MAAQ,CACZZ,MCVY,wvCDWZa,kBAAkB,EAClBC,mBAAmB,GAEpB,EAAKZ,aAAe,EAAKA,aAAaa,KAAlB,gBACpB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,kBAAoB,EAAKA,kBAAkBF,KAAvB,gBATP,E,yDAWNG,GACZC,KAAKC,SAAS,CACbpB,MAAOkB,EAAMG,OAAOtB,U,0CAIrBoB,KAAKC,UAAS,SAACE,GAAD,MAAgB,CAC7BT,kBAAmBS,EAAUT,uB,2CAI9BM,KAAKC,UAAS,SAACE,GAAD,MAAgB,CAC7BR,mBAAoBQ,EAAUR,wB,0CAGX,IAAD,OACnBS,SACEC,cAAc,kBACdC,iBAAiB,SAAS,WAC1B,EAAKR,uBAEPM,SACEC,cAAc,qBACdC,iBAAiB,SAAS,WAC1B,EAAKT,0B,+BAIP,OACC,6BACC,kBAAC,EAAD,CACChB,MAAOmB,KAAKP,MAAMZ,MAClBE,aAAciB,KAAKjB,aACnBd,WAAY,CACX+B,KAAKP,MAAMC,iBACXM,KAAKP,MAAME,qBAGb,kBAAC,EAAD,CACCd,MAAOmB,KAAKP,MAAMZ,MAClBZ,WAAY,CACX+B,KAAKP,MAAMC,iBACXM,KAAKP,MAAME,0B,GAtDeY,IAAMC,WA6DtCC,IAASC,OAAO,kBAAC,EAAD,MAAuBN,SAASC,cAAc,W","file":"static/js/main.415564a5.chunk.js","sourcesContent":["import React from \"react\";\nfunction Editor(props) {\n\tlet fullScreenStyles = checkFullScreen(props.fullScreen);\n\tlet textareaHeight =\n\t\tprops.fullScreen[0] && !props.fullScreen[1]\n\t\t\t? { minHeight: \"100vh\" }\n\t\t\t: {};\n\treturn (\n\t\t<div id=\"editor-wrap\" style={fullScreenStyles.style}>\n\t\t\t<div id=\"editor-toolbar\">\n\t\t\t\t<i className=\"fa fa-free-code-camp fa-1x\" id=\"logo\"></i> Editor\n\t\t\t\t<i\n\t\t\t\t\tclassName={fullScreenStyles.iconClass}\n\t\t\t\t\tid=\"expand-editor\"\n\t\t\t\t></i>\n\t\t\t</div>\n\t\t\t<textarea\n\t\t\t\ttype=\"text\"\n\t\t\t\tid=\"editor\"\n\t\t\t\tvalue={props.input}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tstyle={textareaHeight}\n\t\t\t></textarea>\n\t\t</div>\n\t);\n}\nfunction checkFullScreen(fullScreen) {\n\tif (!fullScreen[0] && fullScreen[1])\n\t\treturn { style: { display: \"none\" }, iconClass: \"\" };\n\telse if (fullScreen[0] && !fullScreen[1])\n\t\treturn {\n\t\t\tstyle: { width: \"96%\" },\n\t\t\ticonClass: \"fa fa-compress\",\n\t\t};\n\treturn {\n\t\tstyle: {},\n\t\ticonClass: \"fa fa-expand\",\n\t};\n}\nexport default Editor;\n","import React from \"react\";\nimport marked from \"marked\";\nfunction Previewer(props) {\n\tlet fullScreenStyles = checkFullScreen(props.fullScreen);\n\tlet previewHeight =\n\t\t!props.fullScreen[0] && props.fullScreen[1]\n\t\t\t? { minHeight: \"100vh\" }\n\t\t\t: {};\n\tmarked.setOptions({\n\t\tbreaks: true,\n\t});\n\tlet rawHTML = marked(props.input);\n\treturn (\n\t\t<div id=\"previewer-wrap\" style={fullScreenStyles.style}>\n\t\t\t<div id=\"previewer-toolbar\">\n\t\t\t\t<i className=\"fa fa-free-code-camp fa-1x\" id=\"logo\"></i>{\" \"}\n\t\t\t\tPreviewer\n\t\t\t\t<i\n\t\t\t\t\tclassName={fullScreenStyles.iconClass}\n\t\t\t\t\tid=\"expand-previewer\"\n\t\t\t\t></i>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tid=\"preview\"\n\t\t\t\tdangerouslySetInnerHTML={{ __html: rawHTML }}\n\t\t\t\tstyle={previewHeight}\n\t\t\t></div>\n\t\t</div>\n\t);\n}\nfunction checkFullScreen(fullScreen) {\n\tif (fullScreen[0] && !fullScreen[1])\n\t\treturn { style: { display: \"none\" }, iconClass: \"\" };\n\telse if (!fullScreen[0] && fullScreen[1])\n\t\treturn {\n\t\t\tstyle: { width: \"96%\" },\n\t\t\ticonClass: \"fa fa-compress\",\n\t\t};\n\treturn {\n\t\tstyle: {},\n\t\ticonClass: \"fa fa-expand\",\n\t};\n}\nexport default Previewer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Editor from \"./editor.js\";\nimport Previewer from \"./previewer.js\";\nimport placeHolder from \"./placeHolder.js\";\nclass MarkdownPreviewer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: placeHolder,\n\t\t\teditorFullScreen: false,\n\t\t\tpreviewFullScreen: false,\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleClickPreview = this.handleClickPreview.bind(this);\n\t\tthis.handleClickEditor = this.handleClickEditor.bind(this);\n\t}\n\thandleChange(event) {\n\t\tthis.setState({\n\t\t\tinput: event.target.value,\n\t\t});\n\t}\n\thandleClickEditor() {\n\t\tthis.setState((prevState) => ({\n\t\t\teditorFullScreen: !prevState.editorFullScreen,\n\t\t}));\n\t}\n\thandleClickPreview() {\n\t\tthis.setState((prevState) => ({\n\t\t\tpreviewFullScreen: !prevState.previewFullScreen,\n\t\t}));\n\t}\n\tcomponentDidMount() {\n\t\tdocument\n\t\t\t.querySelector(\"#expand-editor\")\n\t\t\t.addEventListener(\"click\", () => {\n\t\t\t\tthis.handleClickEditor();\n\t\t\t});\n\t\tdocument\n\t\t\t.querySelector(\"#expand-previewer\")\n\t\t\t.addEventListener(\"click\", () => {\n\t\t\t\tthis.handleClickPreview();\n\t\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Editor\n\t\t\t\t\tinput={this.state.input}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\tfullScreen={[\n\t\t\t\t\t\tthis.state.editorFullScreen,\n\t\t\t\t\t\tthis.state.previewFullScreen,\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<Previewer\n\t\t\t\t\tinput={this.state.input}\n\t\t\t\t\tfullScreen={[\n\t\t\t\t\t\tthis.state.editorFullScreen,\n\t\t\t\t\t\tthis.state.previewFullScreen,\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\nReactDOM.render(<MarkdownPreviewer />, document.querySelector(\"#root\"));\n","let placeHolder = `# Welcome to my React Markdown Previewer!\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n  \nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/640px-React-icon.svg.png)\n`;\nexport default placeHolder;\n"],"sourceRoot":""}